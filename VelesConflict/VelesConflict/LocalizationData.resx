<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AvailablePoints" xml:space="preserve">
    <value>Available Points</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Connecting" xml:space="preserve">
    <value>Connecting</value>
  </data>
  <data name="ConnectionRequired" xml:space="preserve">
    <value>                         Error! You need an internet connection in order to play online.</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="DifficultyEasy" xml:space="preserve">
    <value>Easy</value>
  </data>
  <data name="DifficultyHard" xml:space="preserve">
    <value>Hard</value>
  </data>
  <data name="DifficultyInsane" xml:space="preserve">
    <value>Insane</value>
  </data>
  <data name="DifficultyMedium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="GameFound" xml:space="preserve">
    <value>Game Found</value>
  </data>
  <data name="GG" xml:space="preserve">
    <value>You lost, try again.</value>
  </data>
  <data name="Locale" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="LookingForGames" xml:space="preserve">
    <value>Looking for games</value>
  </data>
  <data name="Multiplayer" xml:space="preserve">
    <value>Multiplayer</value>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>New Game</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="QuickMatch" xml:space="preserve">
    <value>Quick Match</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="Research" xml:space="preserve">
    <value>Research</value>
  </data>
  <data name="Science1" xml:space="preserve">
    <value>Increase growth





With latest inventions in genetic engineering you can easily increase planet growth!

	LightGreen	+10%	White	 for planet growth

Price: {0}</value>
  </data>
  <data name="Science2" xml:space="preserve">
    <value>Increase speed





Newest research in ship building will allow to boost your ship speed!

	LightGreen	+7%	White	 to ship speed

Price: {0}</value>
  </data>
  <data name="Science3" xml:space="preserve">
    <value>Increase attack





Putting new guns will provide a boost to your attack powers!

	LightGreen	+8%	White	 to attack

Price: {0}</value>
  </data>
  <data name="Science4" xml:space="preserve">
    <value>Increase armor





Your scientists have achieved unprecedented strength in the new metals, which significantly increases your armor!

	LightGreen	+10%	White	 to armor

Price: {0}</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="ShareText" xml:space="preserve">
    <value>Check out this cool Windows Phone 7 game!</value>
  </data>
  <data name="Tutorial0" xml:space="preserve">
    <value>On the right you see the info screen.
It will display the information about the episode and the updates in the update mode
Tap to continue</value>
  </data>
  <data name="Tutorial1" xml:space="preserve">
    <value>In the center is the strategic screen, here you can move around
and select the episode that you'd like to play.
The yellow one is the most current episode.
Tap to continue</value>
  </data>
  <data name="Tutorial2" xml:space="preserve">
    <value>By dragging the DNA icon to the bottom of the left corner you will access the update mode
Do that now.
Tap to continue</value>
  </data>
  <data name="Tutorial3" xml:space="preserve">
    <value>In this menu you can spend your science points on upgrades.
To exit from this mode, drag the DNA icon back to its original position
Tap to continue</value>
  </data>
  <data name="Tutorial4" xml:space="preserve">
    <value>This is the mission screen, here you can select the mission on which you want to play
Tap to continue</value>
  </data>
  <data name="Tutorial5" xml:space="preserve">
    <value>Here you see three planets, the green is yours, the red is the enemy's. Those with no color are neutral.
To attack a planet, select your planets by draging or tapping, and then double click the target
Tap to continue</value>
  </data>
</root>